// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "#soon",
        "contact": {
            "name": "Burak Fidan",
            "email": "mrntlu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/anime": {
            "get": {
                "description": "Returns animes by sort and filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get Animes by Sort and Filter",
                "parameters": [
                    {
                        "description": "Sort and Filter Anime",
                        "name": "sortfilteranime",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SortFilterAnime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Anime"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/anime/season": {
            "get": {
                "description": "Returns animes by year and season",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get Animes by Year and Season",
                "parameters": [
                    {
                        "description": "Sort Anime By Year and Season",
                        "name": "sortbyyearseasonanime",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SortByYearSeasonAnime"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Anime"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/anime/upcoming": {
            "get": {
                "description": "Returns upcoming animes by day of week",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anime"
                ],
                "summary": "Get Upcoming Animes by Day of Week",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Anime"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Allows users to register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User Registration",
                "parameters": [
                    {
                        "description": "User registration info",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Register"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game": {
            "get": {
                "description": "Returns games by sort and filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Games by Sort and Filter",
                "parameters": [
                    {
                        "description": "Sort and Filter Game",
                        "name": "sortfiltergame",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SortFilterGame"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Game"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/game/upcoming": {
            "get": {
                "description": "Returns upcoming games by sort with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "game"
                ],
                "summary": "Get Upcoming Games by Sort",
                "parameters": [
                    {
                        "description": "Sort Game",
                        "name": "sortgame",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SortGame"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Game"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns user list by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Get User List by User ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.UserList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes list by type and user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Delete List by Type",
                "parameters": [
                    {
                        "description": "Delete List",
                        "name": "deletelist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.DeleteList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates user list is_public value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Update User List Visibility",
                "parameters": [
                    {
                        "description": "Update User List",
                        "name": "updateuserlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateUserList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Could not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list/anime": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns anime list by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Get Anime List by User ID",
                "parameters": [
                    {
                        "enum": [
                            "popularity",
                            "new",
                            "old",
                            "score"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.AnimeList"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates Anime List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Create Anime List",
                "parameters": [
                    {
                        "description": "Create Anime List",
                        "name": "createanimelist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateAnimeList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates anime list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Update Anime List",
                "parameters": [
                    {
                        "description": "Update Anime List",
                        "name": "updateanimelist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateAnimeList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Unauthorized update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Could not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list/game": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns game list by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Get Game List by User ID",
                "parameters": [
                    {
                        "enum": [
                            "popularity",
                            "new",
                            "old",
                            "score"
                        ],
                        "type": "string",
                        "name": "sort",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.GameList"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates Game List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Create Game List",
                "parameters": [
                    {
                        "description": "Create Game List",
                        "name": "creategamelist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateGameList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list/movie": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates Movie Watch List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Create Movie Watch List",
                "parameters": [
                    {
                        "description": "Create Movie Watch List",
                        "name": "createmoviewatchlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateMovieWatchList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/list/tv": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates TVSeries Watch List",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_list"
                ],
                "summary": "Create TVSeries Watch List",
                "parameters": [
                    {
                        "description": "Create TVSeries Watch List",
                        "name": "createtvserieswatchlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateTVSeriesWatchList"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes everything related to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Deletes user information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/forgot-password": {
            "post": {
                "description": "Users can change their password when they forgot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Will be used when user forgot password",
                "parameters": [
                    {
                        "description": "User's email",
                        "name": "ForgotPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ForgotPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Couldn't find any user",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns users membership \u0026 investing/subscription limits",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User membership info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Info",
                        "schema": {
                            "$ref": "#/definitions/responses.UserInfo"
                        }
                    }
                }
            }
        },
        "/user/membership": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "User membership status will be updated depending on subscription status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change User Membership",
                "parameters": [
                    {
                        "description": "Set Membership",
                        "name": "changemembership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ChangeMembership"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/notification": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Users can change their notification preference",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change User Notification Preference",
                "parameters": [
                    {
                        "description": "Set notification",
                        "name": "changenotification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ChangeNotification"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Users can change their password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change User Password",
                "parameters": [
                    {
                        "description": "Set new password",
                        "name": "ChangePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ChangePassword"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/token": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Depending on logged in device fcm token will be updated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Updates FCM User Token",
                "parameters": [
                    {
                        "description": "Set token",
                        "name": "changefcmtoken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.ChangeFCMToken"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.ChangeFCMToken": {
            "type": "object",
            "required": [
                "fcm_token"
            ],
            "properties": {
                "fcm_token": {
                    "type": "string"
                }
            }
        },
        "requests.ChangeMembership": {
            "type": "object",
            "properties": {
                "is_premium": {
                    "type": "boolean"
                }
            }
        },
        "requests.ChangeNotification": {
            "type": "object",
            "required": [
                "app_notification",
                "mail_notification"
            ],
            "properties": {
                "app_notification": {
                    "type": "boolean"
                },
                "mail_notification": {
                    "type": "boolean"
                }
            }
        },
        "requests.ChangePassword": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 6
                },
                "old_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "requests.CreateAnimeList": {
            "type": "object",
            "required": [
                "anime_id",
                "status",
                "watched_episodes"
            ],
            "properties": {
                "anime_id": {
                    "type": "string"
                },
                "score": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "finished",
                        "dropped",
                        "planto"
                    ]
                },
                "watched_episodes": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "requests.CreateGameList": {
            "type": "object",
            "required": [
                "game_id",
                "status"
            ],
            "properties": {
                "achievement_status": {
                    "type": "number"
                },
                "game_id": {
                    "type": "string"
                },
                "score": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "finished",
                        "dropped",
                        "planto"
                    ]
                }
            }
        },
        "requests.CreateMovieWatchList": {
            "type": "object",
            "required": [
                "movie_id",
                "status"
            ],
            "properties": {
                "movie_id": {
                    "type": "string"
                },
                "score": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "finished",
                        "dropped",
                        "planto"
                    ]
                }
            }
        },
        "requests.CreateTVSeriesWatchList": {
            "type": "object",
            "required": [
                "status",
                "tv_id",
                "watched_episodes",
                "watched_seasons"
            ],
            "properties": {
                "score": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "finished",
                        "dropped",
                        "planto"
                    ]
                },
                "tv_id": {
                    "type": "string"
                },
                "watched_episodes": {
                    "type": "integer"
                },
                "watched_seasons": {
                    "type": "integer"
                }
            }
        },
        "requests.DeleteList": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "anime",
                        "game",
                        "movie",
                        "tv"
                    ]
                }
            }
        },
        "requests.ForgotPassword": {
            "type": "object",
            "required": [
                "email_address"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                }
            }
        },
        "requests.Register": {
            "type": "object",
            "required": [
                "email_address",
                "password",
                "username"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "requests.SortAnime": {
            "type": "object",
            "required": [
                "page",
                "sort"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "popularity",
                        "new",
                        "old"
                    ]
                }
            }
        },
        "requests.SortByYearSeasonAnime": {
            "type": "object",
            "required": [
                "page",
                "season",
                "sort",
                "year"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "season": {
                    "type": "string",
                    "enum": [
                        "winter",
                        "summer",
                        "fall",
                        "spring"
                    ]
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "popularity",
                        "new",
                        "old"
                    ]
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "requests.SortFilterAnime": {
            "type": "object",
            "required": [
                "page",
                "sort"
            ],
            "properties": {
                "demographics": {
                    "type": "string"
                },
                "genres": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "popularity",
                        "new",
                        "old"
                    ]
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "airing",
                        "upcoming",
                        "finished"
                    ]
                },
                "studios": {
                    "type": "string"
                },
                "themes": {
                    "type": "string"
                }
            }
        },
        "requests.SortFilterGame": {
            "type": "object",
            "required": [
                "page",
                "sort"
            ],
            "properties": {
                "genres": {
                    "type": "string"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "platform": {
                    "type": "string"
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "popularity",
                        "new",
                        "old"
                    ]
                },
                "tba": {
                    "type": "boolean"
                }
            }
        },
        "requests.SortGame": {
            "type": "object",
            "required": [
                "page",
                "sort"
            ],
            "properties": {
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "sort": {
                    "type": "string",
                    "enum": [
                        "popularity",
                        "new",
                        "old"
                    ]
                }
            }
        },
        "requests.UpdateAnimeList": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "is_updating_score": {
                    "type": "boolean"
                },
                "score": {
                    "type": "number",
                    "maximum": 10,
                    "minimum": 0
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "finished",
                        "dropped",
                        "planto"
                    ]
                },
                "times_finished": {
                    "type": "integer",
                    "minimum": 0
                },
                "watched_episodes": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "requests.UpdateUserList": {
            "type": "object",
            "properties": {
                "is_public": {
                    "type": "boolean"
                }
            }
        },
        "responses.Anime": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "age_rating": {
                    "type": "string"
                },
                "aired": {
                    "$ref": "#/definitions/responses.AnimeAirDate"
                },
                "demographics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeGenre"
                    }
                },
                "description": {
                    "type": "string"
                },
                "episodes": {
                    "type": "integer"
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeGenre"
                    }
                },
                "image_url": {
                    "type": "string"
                },
                "is_airing": {
                    "type": "boolean"
                },
                "mal_id": {
                    "type": "integer"
                },
                "mal_score": {
                    "type": "number"
                },
                "mal_scored_by": {
                    "type": "integer"
                },
                "producers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeNameURL"
                    }
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeRelation"
                    }
                },
                "season": {
                    "type": "string"
                },
                "small_image_url": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streaming": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeNameURL"
                    }
                },
                "studios": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeNameURL"
                    }
                },
                "themes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeGenre"
                    }
                },
                "title_en": {
                    "type": "string"
                },
                "title_jp": {
                    "type": "string"
                },
                "title_original": {
                    "type": "string"
                },
                "trailer": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "responses.AnimeAirDate": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string"
                },
                "from_day": {
                    "type": "integer"
                },
                "from_month": {
                    "type": "integer"
                },
                "from_year": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                },
                "to_day": {
                    "type": "integer"
                },
                "to_month": {
                    "type": "integer"
                },
                "to_year": {
                    "type": "integer"
                }
            }
        },
        "responses.AnimeGenre": {
            "type": "object",
            "properties": {
                "mal_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "responses.AnimeList": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "anime": {
                    "$ref": "#/definitions/responses.Anime"
                },
                "anime_id": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "times_finished": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                },
                "watched_episodes": {
                    "type": "integer"
                }
            }
        },
        "responses.AnimeNameURL": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "responses.AnimeRelation": {
            "type": "object",
            "properties": {
                "relation": {
                    "type": "string"
                },
                "source": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.AnimeRelationDetails"
                    }
                }
            }
        },
        "responses.AnimeRelationDetails": {
            "type": "object",
            "properties": {
                "mal_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "redirect_url": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "responses.Game": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "age_rating": {
                    "type": "string"
                },
                "background_image": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "developers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "genres": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.GameGenre"
                    }
                },
                "metacritic_score": {
                    "type": "integer"
                },
                "metacritic_score_by_platform": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.GameMetacriticScorePlatform"
                    }
                },
                "platforms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "publishers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rawg_id": {
                    "type": "integer"
                },
                "rawg_rating": {
                    "type": "number"
                },
                "rawg_rating_count": {
                    "type": "integer"
                },
                "related_games": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.GameRelation"
                    }
                },
                "release_date": {
                    "type": "string"
                },
                "stores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.GameStore"
                    }
                },
                "subreddit": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tba": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "title_original": {
                    "type": "string"
                }
            }
        },
        "responses.GameGenre": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "rawg_id": {
                    "type": "string"
                }
            }
        },
        "responses.GameList": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "achievement_status": {
                    "type": "number"
                },
                "game": {
                    "$ref": "#/definitions/responses.Game"
                },
                "game_id": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "times_finished": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "responses.GameMetacriticScorePlatform": {
            "type": "object",
            "properties": {
                "platform": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "responses.GameRelation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "rawg_id": {
                    "type": "integer"
                },
                "release_date": {
                    "type": "string"
                }
            }
        },
        "responses.GameStore": {
            "type": "object",
            "properties": {
                "stores": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "responses.UserInfo": {
            "type": "object",
            "properties": {
                "app_notification": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "fcm_token": {
                    "type": "string"
                },
                "is_oauth": {
                    "type": "boolean"
                },
                "is_premium": {
                    "type": "boolean"
                },
                "mail_notification": {
                    "type": "boolean"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.UserList": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string"
                },
                "anime_avg_score": {
                    "type": "number"
                },
                "anime_count": {
                    "type": "integer"
                },
                "anime_total_watched_episodes": {
                    "type": "integer"
                },
                "game_avg_score": {
                    "type": "number"
                },
                "game_count": {
                    "type": "integer"
                },
                "game_total_finished": {
                    "type": "integer"
                },
                "is_public": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "http://localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"https"},
	Title:            "Project Consumer API",
	Description:      "REST Api of Project Consumer.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
