basePath: /api/v1
definitions:
  requests.ChangeFCMToken:
    properties:
      fcm_token:
        type: string
    required:
    - fcm_token
    type: object
  requests.ChangeMembership:
    properties:
      is_premium:
        type: boolean
    type: object
  requests.ChangeNotification:
    properties:
      app_notification:
        type: boolean
      mail_notification:
        type: boolean
    required:
    - app_notification
    - mail_notification
    type: object
  requests.ChangePassword:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  requests.CreateAnimeList:
    properties:
      anime_id:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      watched_episodes:
        minimum: 0
        type: integer
    required:
    - anime_id
    - status
    - watched_episodes
    type: object
  requests.CreateGameList:
    properties:
      achievement_status:
        type: number
      game_id:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
    required:
    - game_id
    - status
    type: object
  requests.CreateMovieWatchList:
    properties:
      movie_id:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
    required:
    - movie_id
    - status
    type: object
  requests.CreateTVSeriesWatchList:
    properties:
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      tv_id:
        type: string
      watched_episodes:
        type: integer
      watched_seasons:
        type: integer
    required:
    - status
    - tv_id
    - watched_episodes
    - watched_seasons
    type: object
  requests.DeleteList:
    properties:
      id:
        type: string
      type:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
    required:
    - id
    - type
    type: object
  requests.ForgotPassword:
    properties:
      email_address:
        type: string
    required:
    - email_address
    type: object
  requests.Register:
    properties:
      email_address:
        type: string
      fcm_token:
        type: string
      image:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email_address
    - password
    - username
    type: object
  requests.SortAnime:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - date
        type: string
      type:
        enum:
        - 1
        - -1
        type: integer
    required:
    - page
    - sort
    - type
    type: object
  requests.SortByYearSeasonAnime:
    properties:
      page:
        minimum: 1
        type: integer
      season:
        enum:
        - winter
        - summer
        - fall
        - spring
        type: string
      sort:
        enum:
        - popularity
        - date
        type: string
      type:
        enum:
        - 1
        - -1
        type: integer
      year:
        type: integer
    required:
    - page
    - season
    - sort
    - type
    - year
    type: object
  requests.SortFilterAnime:
    properties:
      demographics:
        type: string
      genres:
        type: string
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - date
        type: string
      status:
        enum:
        - airing
        - upcoming
        - finished
        type: string
      studios:
        type: string
      themes:
        type: string
      type:
        enum:
        - 1
        - -1
        type: integer
    required:
    - page
    - sort
    - type
    type: object
  responses.Anime:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      aired:
        $ref: '#/definitions/responses.AnimeAirDate'
      demographics:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      description:
        type: string
      episodes:
        type: integer
      genres:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      image_url:
        type: string
      is_airing:
        type: boolean
      mal_id:
        type: integer
      mal_score:
        type: number
      mal_scored_by:
        type: integer
      producers:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      relations:
        items:
          $ref: '#/definitions/responses.AnimeRelation'
        type: array
      season:
        type: string
      small_image_url:
        type: string
      source:
        type: string
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      studios:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      themes:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
      trailer:
        type: string
      type:
        type: string
      year:
        type: integer
    type: object
  responses.AnimeAirDate:
    properties:
      from:
        type: string
      from_day:
        type: integer
      from_month:
        type: integer
      from_year:
        type: integer
      to:
        type: string
      to_day:
        type: integer
      to_month:
        type: integer
      to_year:
        type: integer
    type: object
  responses.AnimeGenre:
    properties:
      mal_id:
        type: integer
      name:
        type: string
      url:
        type: string
    type: object
  responses.AnimeList:
    properties:
      _id:
        type: string
      anime:
        $ref: '#/definitions/responses.Anime'
      anime_id:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
      watched_episodes:
        type: integer
    type: object
  responses.AnimeNameURL:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  responses.AnimeRelation:
    properties:
      relation:
        type: string
      source:
        items:
          $ref: '#/definitions/responses.AnimeRelationDetails'
        type: array
    type: object
  responses.AnimeRelationDetails:
    properties:
      mal_id:
        type: integer
      name:
        type: string
      redirect_url:
        type: string
      type:
        type: string
    type: object
  responses.Game:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      background_image:
        type: string
      description:
        type: string
      developers:
        items:
          type: string
        type: array
      genres:
        items:
          $ref: '#/definitions/responses.GameGenre'
        type: array
      metacritic_score:
        type: integer
      metacritic_score_by_platform:
        items:
          $ref: '#/definitions/responses.GameMetacriticScorePlatform'
        type: array
      platforms:
        items:
          type: string
        type: array
      publishers:
        items:
          type: string
        type: array
      rawg_id:
        type: integer
      rawg_rating:
        type: number
      rawg_rating_count:
        type: integer
      related_games:
        items:
          $ref: '#/definitions/responses.GameRelation'
        type: array
      release_date:
        type: string
      stores:
        items:
          $ref: '#/definitions/responses.GameStore'
        type: array
      subreddit:
        type: string
      tags:
        items:
          type: string
        type: array
      tba:
        type: boolean
      title:
        type: string
      title_original:
        type: string
    type: object
  responses.GameGenre:
    properties:
      name:
        type: string
      rawg_id:
        type: string
    type: object
  responses.GameList:
    properties:
      _id:
        type: string
      achievement_status:
        type: number
      game:
        $ref: '#/definitions/responses.Game'
      game_id:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  responses.GameMetacriticScorePlatform:
    properties:
      platform:
        type: string
      score:
        type: number
    type: object
  responses.GameRelation:
    properties:
      name:
        type: string
      rawg_id:
        type: integer
      release_date:
        type: string
    type: object
  responses.GameStore:
    properties:
      stores:
        type: integer
      url:
        type: string
    type: object
  responses.UserInfo:
    properties:
      app_notification:
        type: boolean
      email:
        type: string
      fcm_token:
        type: string
      is_oauth:
        type: boolean
      is_premium:
        type: boolean
      mail_notification:
        type: boolean
      username:
        type: string
    type: object
  responses.UserList:
    properties:
      _id:
        type: string
      anime_avg_score:
        type: number
      anime_count:
        type: integer
      anime_total_watched_episodes:
        type: integer
      game_avg_score:
        type: number
      game_count:
        type: integer
      game_total_finished:
        type: integer
      is_public:
        type: boolean
      slug:
        type: string
      user_id:
        type: string
    type: object
host: http://localhost:8080
info:
  contact:
    email: mrntlu@gmail.com
    name: Burak Fidan
  description: REST Api of Project Consumer.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: '#soon'
  title: Project Consumer API
  version: "1.0"
paths:
  /anime:
    get:
      consumes:
      - application/json
      description: Returns animes by sort and filter
      parameters:
      - description: Sort and Filter Anime
        in: body
        name: sortfilteranime
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterAnime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Animes by Sort and Filter
      tags:
      - anime
  /anime/season:
    get:
      consumes:
      - application/json
      description: Returns animes by year and season
      parameters:
      - description: Sort Anime By Year and Season
        in: body
        name: sortbyyearseasonanime
        required: true
        schema:
          $ref: '#/definitions/requests.SortByYearSeasonAnime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Animes by Year and Season
      tags:
      - anime
  /anime/upcoming:
    get:
      consumes:
      - application/json
      description: Returns upcoming animes by day of week
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Upcoming Animes by Day of Week
      tags:
      - anime
  /auth/register:
    post:
      consumes:
      - application/json
      description: Allows users to register
      parameters:
      - description: User registration info
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User Registration
      tags:
      - auth
  /list:
    delete:
      consumes:
      - application/json
      description: Deletes list by type and user id
      parameters:
      - description: Delete List
        in: body
        name: deletelist
        required: true
        schema:
          $ref: '#/definitions/requests.DeleteList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete List by Type
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: Returns user list by user id
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserList'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get User List by User ID
      tags:
      - lists
  /list/anime:
    get:
      consumes:
      - application/json
      description: Returns anime list by user id
      parameters:
      - enum:
        - popularity
        - new
        - old
        - score
        in: query
        name: sort
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.AnimeList'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Anime List by User ID
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: Creates Anime List
      parameters:
      - description: Create Anime List
        in: body
        name: createanimelist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateAnimeList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Anime List
      tags:
      - lists
  /list/game:
    get:
      consumes:
      - application/json
      description: Returns game list by user id
      parameters:
      - enum:
        - popularity
        - new
        - old
        - score
        in: query
        name: sort
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.GameList'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Game List by User ID
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: Creates Game List
      parameters:
      - description: Create Game List
        in: body
        name: creategamelist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateGameList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Game List
      tags:
      - lists
  /list/movie:
    post:
      consumes:
      - application/json
      description: Creates Movie Watch List
      parameters:
      - description: Create Movie Watch List
        in: body
        name: createmoviewatchlist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMovieWatchList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Movie Watch List
      tags:
      - lists
  /list/tv:
    post:
      consumes:
      - application/json
      description: Creates TVSeries Watch List
      parameters:
      - description: Create TVSeries Watch List
        in: body
        name: createtvserieswatchlist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTVSeriesWatchList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create TVSeries Watch List
      tags:
      - lists
  /user:
    delete:
      consumes:
      - application/json
      description: Deletes everything related to user
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Deletes user information
      tags:
      - user
  /user/forgot-password:
    post:
      consumes:
      - application/json
      description: Users can change their password when they forgot
      parameters:
      - description: User's email
        in: body
        name: ForgotPassword
        required: true
        schema:
          $ref: '#/definitions/requests.ForgotPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Couldn't find any user
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Will be used when user forgot password
      tags:
      - user
  /user/info:
    get:
      consumes:
      - application/json
      description: Returns users membership & investing/subscription limits
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Info
          schema:
            $ref: '#/definitions/responses.UserInfo'
      security:
      - ApiKeyAuth: []
      summary: User membership info
      tags:
      - user
  /user/membership:
    patch:
      consumes:
      - application/json
      description: User membership status will be updated depending on subscription
        status
      parameters:
      - description: Set Membership
        in: body
        name: changemembership
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeMembership'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Membership
      tags:
      - user
  /user/notification:
    patch:
      consumes:
      - application/json
      description: Users can change their notification preference
      parameters:
      - description: Set notification
        in: body
        name: changenotification
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeNotification'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Notification Preference
      tags:
      - user
  /user/password:
    patch:
      consumes:
      - application/json
      description: Users can change their password
      parameters:
      - description: Set new password
        in: body
        name: ChangePassword
        required: true
        schema:
          $ref: '#/definitions/requests.ChangePassword'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Password
      tags:
      - user
  /user/token:
    patch:
      consumes:
      - application/json
      description: Depending on logged in device fcm token will be updated
      parameters:
      - description: Set token
        in: body
        name: changefcmtoken
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeFCMToken'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Updates FCM User Token
      tags:
      - user
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
