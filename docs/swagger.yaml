basePath: /api/v1
definitions:
  models.AnimeList:
    properties:
      _id:
        type: string
      anime_id:
        type: string
      anime_mal_id:
        type: integer
      created_at:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
      watched_episodes:
        type: integer
    type: object
  models.ConsumeLaterList:
    properties:
      _id:
        type: string
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        description: anime, movie, tv or game
        type: string
      created_at:
        type: string
      self_note:
        type: string
      user_id:
        type: string
    type: object
  models.CustomList:
    properties:
      _id:
        type: string
      bookmarks:
        items:
          type: string
        type: array
      content:
        items:
          $ref: '#/definitions/models.CustomListContent'
        type: array
      created_at:
        type: string
      description:
        type: string
      is_private:
        type: boolean
      likes:
        items:
          type: string
        type: array
      name:
        type: string
      user_id:
        type: string
    type: object
  models.CustomListContent:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        description: anime, movie, tv or game
        type: string
      order:
        type: integer
    type: object
  models.GameList:
    properties:
      _id:
        type: string
      achievement_status:
        type: number
      created_at:
        type: string
      game_id:
        type: string
      game_rawg_id:
        type: integer
      hours_played:
        type: integer
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  models.MangaList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      manga_id:
        type: string
      manga_mal_id:
        type: integer
      read_chapters:
        type: integer
      read_volumes:
        type: integer
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  models.MovieWatchList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      movie_id:
        type: string
      movie_tmdb_id:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  models.Notification:
    properties:
      friend_request:
        type: boolean
      review_likes:
        type: boolean
    type: object
  models.TVSeriesWatchList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      tv_id:
        type: string
      tv_tmdb_id:
        type: string
      user_id:
        type: string
      watched_episodes:
        type: integer
      watched_seasons:
        type: integer
    type: object
  models.User:
    properties:
      _id:
        type: string
      app_notification:
        $ref: '#/definitions/models.Notification'
      can_change_username:
        type: boolean
      email:
        type: string
      fcm_token:
        type: string
      friends:
        items:
          type: string
        type: array
      image:
        type: string
      is_banned:
        type: boolean
      is_lifetime_premium:
        type: boolean
      is_oauth:
        type: boolean
      is_premium:
        type: boolean
      mail_notification:
        $ref: '#/definitions/models.Notification'
      membership_type:
        description: 0 Basic, 1 Premium 2 Premium Supporter
        type: integer
      oauth_type:
        description: 0 google, 1 apple
        type: integer
      username:
        type: string
    type: object
  requests.AddToCustomList:
    properties:
      content:
        $ref: '#/definitions/requests.AddToCustomListContent'
      id:
        type: string
    required:
    - content
    - id
    type: object
  requests.AddToCustomListContent:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
    required:
    - content_id
    - content_type
    type: object
  requests.AnswerFriendRequest:
    properties:
      answer:
        description: 0 deny, 1 accept, 2 ignore
        maximum: 2
        minimum: 0
        type: integer
      id:
        type: string
    required:
    - answer
    - id
    type: object
  requests.AssistantRequest:
    properties:
      contentName:
        type: string
      contentType:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
    required:
    - contentName
    - contentType
    type: object
  requests.BulkDeleteCustomList:
    properties:
      content:
        items:
          type: string
        type: array
      id:
        type: string
    required:
    - content
    - id
    type: object
  requests.ChangeFCMToken:
    properties:
      fcm_token:
        type: string
    required:
    - fcm_token
    type: object
  requests.ChangeImage:
    properties:
      image:
        type: string
    required:
    - image
    type: object
  requests.ChangeMembership:
    properties:
      is_premium:
        type: boolean
      membership_type:
        type: integer
    type: object
  requests.ChangeNotification:
    properties:
      friend_request:
        type: boolean
      review_likes:
        type: boolean
    required:
    - friend_request
    - review_likes
    type: object
  requests.ChangePassword:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  requests.ChangeUsername:
    properties:
      username:
        minLength: 3
        type: string
    required:
    - username
    type: object
  requests.CreateAnimeList:
    properties:
      anime_id:
        type: string
      anime_mal_id:
        type: integer
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
      watched_episodes:
        minimum: 0
        type: integer
    required:
    - anime_id
    - anime_mal_id
    - status
    - watched_episodes
    type: object
  requests.CreateConsumeLater:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
      self_note:
        type: string
    required:
    - content_id
    - content_type
    type: object
  requests.CreateCustomList:
    properties:
      content:
        items:
          $ref: '#/definitions/requests.CustomListContent'
        type: array
      description:
        type: string
      is_private:
        type: boolean
      name:
        maxLength: 250
        minLength: 1
        type: string
    required:
    - content
    - is_private
    - name
    type: object
  requests.CreateGameList:
    properties:
      achievement_status:
        maximum: 100
        minimum: 0
        type: number
      game_id:
        type: string
      game_rawg_id:
        type: integer
      hours_played:
        minimum: 0
        type: integer
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
    required:
    - game_id
    - game_rawg_id
    - status
    type: object
  requests.CreateMangaList:
    properties:
      manga_id:
        type: string
      manga_mal_id:
        type: integer
      read_chapters:
        minimum: 0
        type: integer
      read_volumes:
        minimum: 0
        type: integer
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
    required:
    - manga_id
    - manga_mal_id
    - read_chapters
    - read_volumes
    - status
    type: object
  requests.CreateMovieWatchList:
    properties:
      movie_id:
        type: string
      movie_tmdb_id:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
    required:
    - movie_id
    - movie_tmdb_id
    - status
    type: object
  requests.CreateReview:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
      is_spoiler:
        type: boolean
      review:
        maxLength: 1000
        minLength: 6
        type: string
      star:
        maximum: 5
        minimum: 1
        type: integer
    required:
    - content_id
    - content_type
    - is_spoiler
    - review
    - star
    type: object
  requests.CreateTVSeriesWatchList:
    properties:
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
      tv_id:
        type: string
      tv_tmdb_id:
        type: string
      watched_episodes:
        minimum: 0
        type: integer
      watched_seasons:
        minimum: 0
        type: integer
    required:
    - status
    - tv_id
    - tv_tmdb_id
    - watched_episodes
    - watched_seasons
    type: object
  requests.CustomListContent:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
      order:
        type: integer
    required:
    - content_id
    - content_type
    - order
    type: object
  requests.DeleteList:
    properties:
      id:
        type: string
      type:
        enum:
        - anime
        - game
        - movie
        - tv
        - manga
        type: string
    required:
    - id
    - type
    type: object
  requests.FilterByStreamingPlatform:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - new
        - old
        type: string
      streamingPlatform:
        type: string
    required:
    - page
    - sort
    - streamingPlatform
    type: object
  requests.FilterByStreamingPlatformAndRegion:
    properties:
      page:
        minimum: 1
        type: integer
      region:
        type: string
      sort:
        enum:
        - popularity
        - new
        - old
        type: string
      streamingPlatform:
        type: string
    required:
    - page
    - region
    - sort
    - streamingPlatform
    type: object
  requests.FilterByStudio:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - new
        - old
        type: string
      studio:
        type: string
    required:
    - page
    - sort
    - studio
    type: object
  requests.ForgotPassword:
    properties:
      email_address:
        type: string
    required:
    - email_address
    type: object
  requests.GetProfile:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  requests.ID:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  requests.IDPagination:
    properties:
      id:
        type: string
      page:
        minimum: 1
        type: integer
    required:
    - id
    - page
    type: object
  requests.IncrementTVSeriesList:
    properties:
      id:
        type: string
      is_episode:
        type: boolean
    required:
    - id
    - is_episode
    type: object
  requests.LogStatInterval:
    properties:
      interval:
        enum:
        - weekly
        - monthly
        - 3months
        type: string
    required:
    - interval
    type: object
  requests.MarkConsumeLater:
    properties:
      id:
        type: string
      score:
        maximum: 10
        minimum: 0
        type: number
    required:
    - id
    type: object
  requests.Pagination:
    properties:
      page:
        minimum: 1
        type: integer
    required:
    - page
    type: object
  requests.RegionFilters:
    properties:
      region:
        type: string
    required:
    - region
    type: object
  requests.Register:
    properties:
      email_address:
        type: string
      fcm_token:
        type: string
      image:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email_address
    - password
    - username
    type: object
  requests.Search:
    properties:
      page:
        minimum: 1
        type: integer
      search:
        type: string
    required:
    - page
    - search
    type: object
  requests.SendFriendRequest:
    properties:
      username:
        type: string
    required:
    - username
    type: object
  requests.SortCustomList:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - latest
        - oldest
        - alphabetical
        - unalphabetical
        type: string
    required:
    - page
    - sort
    type: object
  requests.SortCustomListUID:
    properties:
      sort:
        enum:
        - popularity
        - latest
        - oldest
        - alphabetical
        - unalphabetical
        type: string
      userID:
        type: string
    required:
    - sort
    type: object
  requests.SortFilterAnime:
    properties:
      demographics:
        type: string
      genres:
        type: string
      page:
        minimum: 1
        type: integer
      season:
        enum:
        - winter
        - summer
        - fall
        - spring
        type: string
      sort:
        enum:
        - top
        - popularity
        - new
        - old
        type: string
      status:
        enum:
        - airing
        - upcoming
        - finished
        type: string
      studios:
        type: string
      themes:
        type: string
      year:
        type: integer
    required:
    - page
    - sort
    type: object
  requests.SortFilterConsumeLater:
    properties:
      contentType:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
      sort:
        enum:
        - new
        - old
        - alphabetical
        - unalphabetical
        type: string
    required:
    - sort
    type: object
  requests.SortFilterGame:
    properties:
      genres:
        type: string
      page:
        minimum: 1
        type: integer
      platform:
        type: string
      sort:
        enum:
        - top
        - popularity
        - new
        - old
        type: string
      tba:
        type: boolean
    required:
    - page
    - sort
    type: object
  requests.SortFilterManga:
    properties:
      demographics:
        type: string
      genres:
        type: string
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - top
        - popularity
        - new
        - old
        type: string
      status:
        enum:
        - publishing
        - discontinued
        - finished
        type: string
      themes:
        type: string
    required:
    - page
    - sort
    type: object
  requests.SortFilterMovie:
    properties:
      genres:
        type: string
      page:
        minimum: 1
        type: integer
      productionCompanies:
        type: string
      productionCountry:
        type: string
      releaseDateFrom:
        maximum: 2050
        minimum: 1900
        type: integer
      releaseDateTo:
        maximum: 2050
        minimum: 1900
        type: integer
      sort:
        enum:
        - top
        - popularity
        - new
        - old
        type: string
      status:
        enum:
        - production
        - released
        - planned
        type: string
    required:
    - page
    - sort
    type: object
  requests.SortFilterTVSeries:
    properties:
      firstAirDateFrom:
        maximum: 2050
        minimum: 1900
        type: integer
      firstAirDateTo:
        maximum: 2050
        minimum: 1900
        type: integer
      genres:
        type: string
      numSeason:
        minimum: 1
        type: integer
      page:
        minimum: 1
        type: integer
      productionCompanies:
        type: string
      productionCountry:
        type: string
      sort:
        enum:
        - top
        - popularity
        - new
        - old
        type: string
      status:
        enum:
        - production
        - ended
        - airing
        type: string
    required:
    - page
    - sort
    type: object
  requests.SortLikeBookmarkCustomList:
    properties:
      sort:
        enum:
        - popularity
        - latest
        - oldest
        - alphabetical
        - unalphabetical
        type: string
    required:
    - sort
    type: object
  requests.SortLikedReview:
    properties:
      sort:
        enum:
        - popularity
        - latest
        - oldest
        type: string
    required:
    - sort
    type: object
  requests.SortReview:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - latest
        - oldest
        type: string
    required:
    - page
    - sort
    type: object
  requests.SortReviewByContentID:
    properties:
      contentExternalID:
        type: string
      contentExternalIntID:
        type: integer
      contentID:
        type: string
      contentType:
        enum:
        - anime
        - game
        - movie
        - tv
        type: string
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - latest
        - oldest
        type: string
    required:
    - contentID
    - contentType
    - page
    - sort
    type: object
  requests.SortReviewByUserID:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - latest
        - oldest
        type: string
      userID:
        type: string
    required:
    - page
    - sort
    - userID
    type: object
  requests.SortReviewByUsername:
    properties:
      page:
        minimum: 1
        type: integer
      sort:
        enum:
        - popularity
        - latest
        - oldest
        type: string
      username:
        type: string
    required:
    - page
    - sort
    - username
    type: object
  requests.UpdateAnimeList:
    properties:
      id:
        type: string
      is_updating_score:
        type: boolean
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
      watched_episodes:
        minimum: 0
        type: integer
    required:
    - id
    type: object
  requests.UpdateCustomList:
    properties:
      content:
        items:
          $ref: '#/definitions/requests.CustomListContent'
        type: array
      description:
        type: string
      id:
        type: string
      is_private:
        type: boolean
      name:
        maxLength: 250
        minLength: 1
        type: string
    required:
    - content
    - id
    - is_private
    - name
    type: object
  requests.UpdateGameList:
    properties:
      achievement_status:
        minimum: 0
        type: number
      hours_played:
        minimum: 0
        type: integer
      id:
        type: string
      is_updating_score:
        type: boolean
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
    required:
    - id
    type: object
  requests.UpdateMovieList:
    properties:
      id:
        type: string
      is_updating_score:
        type: boolean
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
    required:
    - id
    type: object
  requests.UpdateTVSeriesList:
    properties:
      id:
        type: string
      is_updating_score:
        type: boolean
      score:
        maximum: 10
        minimum: 0
        type: number
      status:
        enum:
        - active
        - finished
        - dropped
        - planto
        type: string
      times_finished:
        minimum: 0
        type: integer
      watched_episodes:
        minimum: 0
        type: integer
      watched_seasons:
        minimum: 0
        type: integer
    required:
    - id
    type: object
  requests.UpdateUserList:
    properties:
      is_public:
        type: boolean
    type: object
  responses.AISuggestion:
    properties:
      _id:
        type: string
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      description:
        type: string
      image_url:
        type: string
      score:
        type: number
      title_en:
        type: string
      title_original:
        type: string
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
    type: object
  responses.AISuggestionResponse:
    properties:
      created_at:
        type: string
      suggestions:
        items:
          $ref: '#/definitions/responses.AISuggestion'
        type: array
    type: object
  responses.Actor:
    properties:
      character:
        type: string
      image:
        type: string
      name:
        type: string
      tmdb_id:
        type: string
    type: object
  responses.ActorDetails:
    properties:
      _id:
        type: string
      image_url:
        type: string
      name:
        type: string
    type: object
  responses.Anime:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      aired:
        $ref: '#/definitions/responses.AnimeAirDate'
      characters:
        items:
          $ref: '#/definitions/responses.AnimeCharacter'
        type: array
      demographics:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      description:
        type: string
      episodes:
        type: integer
      genres:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      image_url:
        type: string
      is_airing:
        type: boolean
      mal_id:
        type: integer
      mal_score:
        type: number
      mal_scored_by:
        type: integer
      popularity:
        type: number
      producers:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.AnimeRecommendation'
        type: array
      relations:
        items:
          $ref: '#/definitions/responses.AnimeRelation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      season:
        type: string
      source:
        type: string
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      studios:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      themes:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
      trailer:
        type: string
      type:
        type: string
      year:
        type: integer
    type: object
  responses.AnimeAirDate:
    properties:
      from:
        type: string
      from_day:
        type: integer
      from_month:
        type: integer
      from_year:
        type: integer
      to:
        type: string
      to_day:
        type: integer
      to_month:
        type: integer
      to_year:
        type: integer
    type: object
  responses.AnimeCharacter:
    properties:
      image:
        type: string
      mal_id:
        type: integer
      name:
        type: string
      role:
        type: string
    type: object
  responses.AnimeDetails:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      aired:
        $ref: '#/definitions/responses.AnimeAirDate'
      anime_list:
        $ref: '#/definitions/responses.AnimeWatchList'
      characters:
        items:
          $ref: '#/definitions/responses.AnimeCharacter'
        type: array
      demographics:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      description:
        type: string
      episodes:
        type: integer
      genres:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      image_url:
        type: string
      is_airing:
        type: boolean
      mal_id:
        type: integer
      mal_score:
        type: number
      mal_scored_by:
        type: integer
      producers:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.AnimeRecommendation'
        type: array
      relations:
        items:
          $ref: '#/definitions/responses.AnimeRelation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      season:
        type: string
      source:
        type: string
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      studios:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      themes:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
      trailer:
        type: string
      type:
        type: string
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
      year:
        type: integer
    type: object
  responses.AnimeGenre:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  responses.AnimeList:
    properties:
      _id:
        type: string
      anime_id:
        type: string
      content_status:
        type: string
      created_at:
        type: string
      image_url:
        type: string
      is_airing:
        type: boolean
      mal_id:
        type: integer
      score:
        type: number
      status:
        type: string
      status_sort:
        type: integer
      times_finished:
        type: integer
      title_en:
        type: string
      title_original:
        type: string
      total_episodes:
        type: integer
      type:
        type: string
      watched_episodes:
        type: integer
    type: object
  responses.AnimeNameURL:
    properties:
      name:
        type: string
      url:
        type: string
    type: object
  responses.AnimeRecommendation:
    properties:
      image_url:
        type: string
      mal_id:
        type: integer
      title:
        type: string
    type: object
  responses.AnimeRelation:
    properties:
      _id:
        type: string
      anime_id:
        type: string
      image_url:
        type: string
      mal_id:
        type: integer
      relation:
        type: string
      title_en:
        type: string
      title_original:
        type: string
      type:
        type: string
    type: object
  responses.AnimeWatchList:
    properties:
      _id:
        type: string
      anime_id:
        type: string
      anime_mal_id:
        type: integer
      created_at:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
      watched_episodes:
        type: integer
    type: object
  responses.Author:
    properties:
      _id:
        type: string
      email:
        type: string
      image:
        type: string
      is_premium:
        type: boolean
      username:
        type: string
    type: object
  responses.ConsumeLater:
    properties:
      _id:
        type: string
      content:
        $ref: '#/definitions/responses.ConsumeLaterContent'
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      self_note:
        type: string
      user_id:
        type: string
    type: object
  responses.ConsumeLaterContent:
    properties:
      description:
        type: string
      image_url:
        type: string
      score:
        type: number
      title_en:
        type: string
      title_original:
        type: string
    type: object
  responses.CustomList:
    properties:
      _id:
        type: string
      author:
        $ref: '#/definitions/responses.Author'
      bookmark_count:
        type: integer
      bookmarks:
        items:
          type: string
        type: array
      content:
        items:
          $ref: '#/definitions/responses.CustomListContent'
        type: array
      created_at:
        type: string
      description:
        type: string
      is_bookmarked:
        type: boolean
      is_liked:
        type: boolean
      is_private:
        type: boolean
      likes:
        items:
          type: string
        type: array
      name:
        type: string
      popularity:
        type: integer
      user_id:
        type: string
    type: object
  responses.CustomListContent:
    properties:
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      image_url:
        type: string
      order:
        type: integer
      score:
        type: number
      title_en:
        type: string
      title_original:
        type: string
    type: object
  responses.ExtraStatistics:
    properties:
      genres:
        items:
          $ref: '#/definitions/responses.MostLikedGenres'
        type: array
      stats:
        items:
          $ref: '#/definitions/responses.FinishedLogStats'
        type: array
    type: object
  responses.FinishedLogStats:
    properties:
      content_type:
        type: string
      count:
        type: integer
      length:
        type: integer
      metacritic_score:
        type: integer
      total_episodes:
        type: integer
      total_seasons:
        type: integer
    type: object
  responses.FriendRequest:
    properties:
      _id:
        type: string
      created_at:
        type: string
      is_ignored:
        type: boolean
      receiver:
        $ref: '#/definitions/responses.Author'
      sender:
        $ref: '#/definitions/responses.Author'
    type: object
  responses.Game:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      description:
        type: string
      developers:
        items:
          type: string
        type: array
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      metacritic_score:
        type: integer
      metacritic_score_by_platform:
        items:
          $ref: '#/definitions/responses.GameMetacriticScorePlatform'
        type: array
      platforms:
        items:
          type: string
        type: array
      popularity:
        type: number
      publishers:
        items:
          type: string
        type: array
      rawg_id:
        type: integer
      rawg_rating:
        type: number
      rawg_rating_count:
        type: integer
      related_games:
        items:
          $ref: '#/definitions/responses.GameRelation'
        type: array
      release_date:
        type: string
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      screenshots:
        items:
          type: string
        type: array
      stores:
        items:
          $ref: '#/definitions/responses.GameStore'
        type: array
      tags:
        items:
          type: string
        type: array
      tba:
        type: boolean
      title:
        type: string
      title_original:
        type: string
    type: object
  responses.GameDetails:
    properties:
      _id:
        type: string
      age_rating:
        type: string
      description:
        type: string
      developers:
        items:
          type: string
        type: array
      game_list:
        $ref: '#/definitions/responses.GamePlayList'
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      metacritic_score:
        type: integer
      metacritic_score_by_platform:
        items:
          $ref: '#/definitions/responses.GameMetacriticScorePlatform'
        type: array
      platforms:
        items:
          type: string
        type: array
      publishers:
        items:
          type: string
        type: array
      rawg_id:
        type: integer
      rawg_rating:
        type: number
      rawg_rating_count:
        type: integer
      related_games:
        items:
          $ref: '#/definitions/responses.GameDetailsRelation'
        type: array
      release_date:
        type: string
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      screenshots:
        items:
          type: string
        type: array
      stores:
        items:
          $ref: '#/definitions/responses.GameStore'
        type: array
      tags:
        items:
          type: string
        type: array
      tba:
        type: boolean
      title:
        type: string
      title_original:
        type: string
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
    type: object
  responses.GameDetailsRelation:
    properties:
      _id:
        type: string
      image_url:
        type: string
      platforms:
        items:
          type: string
        type: array
      rawg_id:
        type: integer
      release_date:
        type: string
      title:
        type: string
      title_original:
        type: string
    type: object
  responses.GameList:
    properties:
      _id:
        type: string
      achievement_status:
        type: number
      content_status:
        type: string
      created_at:
        type: string
      game_id:
        type: string
      hours_played:
        type: integer
      image_url:
        type: string
      rawg_id:
        type: integer
      score:
        type: number
      status:
        type: string
      status_sort:
        type: integer
      tba:
        type: boolean
      times_finished:
        type: integer
      title:
        type: string
      title_original:
        type: string
    type: object
  responses.GameMetacriticScorePlatform:
    properties:
      platform:
        type: string
      score:
        type: number
    type: object
  responses.GamePlayList:
    properties:
      _id:
        type: string
      achievement_status:
        type: number
      created_at:
        type: string
      game_id:
        type: string
      game_rawg_id:
        type: integer
      hours_played:
        type: integer
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  responses.GameRelation:
    properties:
      name:
        type: string
      rawg_id:
        type: integer
      release_date:
        type: string
    type: object
  responses.GameStore:
    properties:
      store_id:
        type: integer
      url:
        type: string
    type: object
  responses.Leaderboard:
    properties:
      image:
        type: string
      is_premium:
        type: boolean
      level:
        type: integer
      user_id:
        type: string
      username:
        type: string
    type: object
  responses.Log:
    properties:
      content_id:
        type: string
      content_image:
        type: string
      content_title:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      log_action:
        type: string
      log_action_details:
        type: string
      log_type:
        type: string
    type: object
  responses.LogsByRange:
    properties:
      count:
        type: integer
      data:
        items:
          $ref: '#/definitions/responses.Log'
        type: array
      date:
        type: string
    type: object
  responses.Manga:
    properties:
      _id:
        type: string
      chapters:
        type: integer
      characters:
        items:
          $ref: '#/definitions/responses.AnimeCharacter'
        type: array
      demographics:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      description:
        type: string
      genres:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      image_url:
        type: string
      is_publishing:
        type: boolean
      mal_id:
        type: integer
      mal_score:
        type: number
      mal_scored_by:
        type: integer
      published:
        $ref: '#/definitions/responses.AnimeAirDate'
      recommendations:
        items:
          $ref: '#/definitions/responses.AnimeRecommendation'
        type: array
      relations:
        items:
          $ref: '#/definitions/responses.AnimeRelation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      serializations:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      status:
        type: string
      themes:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
      type:
        type: string
      volumes:
        type: integer
    type: object
  responses.MangaDetails:
    properties:
      _id:
        type: string
      chapters:
        type: integer
      characters:
        items:
          $ref: '#/definitions/responses.AnimeCharacter'
        type: array
      demographics:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      description:
        type: string
      description_extra:
        type: string
      genres:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      image_url:
        type: string
      is_publishing:
        type: boolean
      mal_id:
        type: integer
      mal_score:
        type: number
      mal_scored_by:
        type: integer
      manga_list:
        $ref: '#/definitions/responses.MangaReadList'
      published:
        $ref: '#/definitions/responses.AnimeAirDate'
      recommendations:
        items:
          $ref: '#/definitions/responses.AnimeRecommendation'
        type: array
      relations:
        items:
          $ref: '#/definitions/responses.AnimeRelation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      serializations:
        items:
          $ref: '#/definitions/responses.AnimeNameURL'
        type: array
      status:
        type: string
      themes:
        items:
          $ref: '#/definitions/responses.AnimeGenre'
        type: array
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
      type:
        type: string
      volumes:
        type: integer
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
    type: object
  responses.MangaReadList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      manga_id:
        type: string
      manga_mal_id:
        type: integer
      read_chapters:
        type: integer
      read_volumes:
        type: integer
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  responses.MostLikedGenres:
    properties:
      genre:
        type: string
      max_count:
        type: integer
      type:
        type: string
    type: object
  responses.Movie:
    properties:
      _id:
        type: string
      actors:
        items:
          $ref: '#/definitions/responses.Actor'
        type: array
      backdrop:
        type: string
      description:
        type: string
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      images:
        items:
          type: string
        type: array
      imdb_id:
        type: string
      length:
        type: integer
      production_companies:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.Recommendation'
        type: array
      release_date:
        type: string
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.Streaming'
        type: array
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
      tmdb_popularity:
        type: number
      tmdb_vote:
        type: number
      tmdb_vote_count:
        type: integer
      top_rated:
        type: number
      translations:
        items:
          $ref: '#/definitions/responses.Translation'
        type: array
      videos:
        items:
          $ref: '#/definitions/responses.Trailer'
        type: array
    type: object
  responses.MovieDetails:
    properties:
      _id:
        type: string
      actors:
        items:
          $ref: '#/definitions/responses.Actor'
        type: array
      backdrop:
        type: string
      description:
        type: string
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      images:
        items:
          type: string
        type: array
      imdb_id:
        type: string
      length:
        type: integer
      production_companies:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.Recommendation'
        type: array
      release_date:
        type: string
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.Streaming'
        type: array
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
      tmdb_popularity:
        type: number
      tmdb_vote:
        type: number
      tmdb_vote_count:
        type: integer
      translations:
        items:
          $ref: '#/definitions/responses.Translation'
        type: array
      videos:
        items:
          $ref: '#/definitions/responses.Trailer'
        type: array
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
      watch_list:
        $ref: '#/definitions/responses.MovieDetailsWatchList'
    type: object
  responses.MovieDetailsWatchList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      movie_id:
        type: string
      movie_tmdb_id:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      user_id:
        type: string
    type: object
  responses.MovieList:
    properties:
      _id:
        type: string
      content_status:
        type: string
      created_at:
        type: string
      image_url:
        type: string
      movie_id:
        type: string
      score:
        type: number
      status:
        type: string
      status_sort:
        type: integer
      times_finished:
        type: integer
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
    type: object
  responses.Notification:
    properties:
      friend_request:
        type: boolean
      review_likes:
        type: boolean
    type: object
  responses.PreviewAnime:
    properties:
      _id:
        type: string
      image_url:
        type: string
      mal_id:
        type: integer
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
    type: object
  responses.PreviewGame:
    properties:
      _id:
        type: string
      image_url:
        type: string
      rawg_id:
        type: integer
      title:
        type: string
      title_original:
        type: string
    type: object
  responses.PreviewManga:
    properties:
      _id:
        type: string
      image_url:
        type: string
      mal_id:
        type: integer
      title_en:
        type: string
      title_jp:
        type: string
      title_original:
        type: string
    type: object
  responses.PreviewMovie:
    properties:
      _id:
        type: string
      image_url:
        type: string
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
    type: object
  responses.PreviewTVSeries:
    properties:
      _id:
        type: string
      image_url:
        type: string
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
    type: object
  responses.ProductionAndCompany:
    properties:
      logo:
        type: string
      name:
        type: string
      origin_country:
        type: string
    type: object
  responses.Recommendation:
    properties:
      description:
        type: string
      image_url:
        type: string
      release_date:
        type: string
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
    type: object
  responses.Review:
    properties:
      _id:
        type: string
      author:
        $ref: '#/definitions/responses.Author'
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      is_author:
        type: boolean
      is_liked:
        type: boolean
      is_spoiler:
        type: boolean
      likes:
        items:
          type: string
        type: array
      popularity:
        type: integer
      review:
        type: string
      star:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  responses.ReviewContent:
    properties:
      image_url:
        type: string
      title_en:
        type: string
      title_original:
        type: string
    type: object
  responses.ReviewDetails:
    properties:
      _id:
        type: string
      author:
        $ref: '#/definitions/responses.Author'
      content:
        $ref: '#/definitions/responses.ReviewContent'
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      is_author:
        type: boolean
      is_liked:
        type: boolean
      is_spoiler:
        type: boolean
      likes:
        items:
          $ref: '#/definitions/responses.Author'
        type: array
      popularity:
        type: integer
      review:
        type: string
      star:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  responses.ReviewSummary:
    properties:
      avg_star:
        type: number
      is_reviewed:
        type: boolean
      review:
        $ref: '#/definitions/responses.Review'
      star_counts:
        $ref: '#/definitions/responses.StarCounts'
      total_votes:
        type: integer
    type: object
  responses.ReviewWithContent:
    properties:
      _id:
        type: string
      author:
        $ref: '#/definitions/responses.Author'
      content:
        $ref: '#/definitions/responses.ReviewContent'
      content_external_id:
        type: string
      content_external_int_id:
        type: integer
      content_id:
        type: string
      content_type:
        type: string
      created_at:
        type: string
      is_author:
        type: boolean
      is_liked:
        type: boolean
      is_spoiler:
        type: boolean
      likes:
        items:
          type: string
        type: array
      popularity:
        type: integer
      review:
        type: string
      star:
        type: integer
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  responses.Season:
    properties:
      air_date:
        type: string
      episode_count:
        type: integer
      image_url:
        type: string
      name:
        type: string
      season_num:
        type: integer
    type: object
  responses.SocialPreview:
    properties:
      custom_lists:
        items:
          $ref: '#/definitions/responses.CustomList'
        type: array
      leaderboard:
        items:
          $ref: '#/definitions/responses.Leaderboard'
        type: array
      reviews:
        items:
          $ref: '#/definitions/responses.ReviewDetails'
        type: array
    type: object
  responses.StarCounts:
    properties:
      five_star:
        type: integer
      four_star:
        type: integer
      one_star:
        type: integer
      three_star:
        type: integer
      two_star:
        type: integer
    type: object
  responses.Streaming:
    properties:
      buy_options:
        items:
          $ref: '#/definitions/responses.StreamingPlatform'
        type: array
      country_code:
        type: string
      rent_options:
        items:
          $ref: '#/definitions/responses.StreamingPlatform'
        type: array
      streaming_platforms:
        items:
          $ref: '#/definitions/responses.StreamingPlatform'
        type: array
    type: object
  responses.StreamingPlatform:
    properties:
      logo:
        type: string
      name:
        type: string
    type: object
  responses.TVDetailsList:
    properties:
      _id:
        type: string
      created_at:
        type: string
      score:
        type: number
      status:
        type: string
      times_finished:
        type: integer
      tv_id:
        type: string
      tv_tmdb_id:
        type: string
      user_id:
        type: string
      watched_episodes:
        type: integer
      watched_seasons:
        type: integer
    type: object
  responses.TVSeries:
    properties:
      _id:
        type: string
      actors:
        items:
          $ref: '#/definitions/responses.Actor'
        type: array
      backdrop:
        type: string
      description:
        type: string
      first_air_date:
        type: string
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      images:
        items:
          type: string
        type: array
      networks:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      production_companies:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.Recommendation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      seasons:
        items:
          $ref: '#/definitions/responses.Season'
        type: array
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.Streaming'
        type: array
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
      tmdb_popularity:
        type: number
      tmdb_vote:
        type: number
      tmdb_vote_count:
        type: integer
      top_rated:
        type: number
      total_episodes:
        type: integer
      total_seasons:
        type: integer
      translations:
        items:
          $ref: '#/definitions/responses.Translation'
        type: array
      videos:
        items:
          $ref: '#/definitions/responses.Trailer'
        type: array
    type: object
  responses.TVSeriesDetails:
    properties:
      _id:
        type: string
      actors:
        items:
          $ref: '#/definitions/responses.Actor'
        type: array
      backdrop:
        type: string
      description:
        type: string
      first_air_date:
        type: string
      genres:
        items:
          type: string
        type: array
      image_url:
        type: string
      images:
        items:
          type: string
        type: array
      networks:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      production_companies:
        items:
          $ref: '#/definitions/responses.ProductionAndCompany'
        type: array
      recommendations:
        items:
          $ref: '#/definitions/responses.Recommendation'
        type: array
      reviews:
        $ref: '#/definitions/responses.ReviewSummary'
      seasons:
        items:
          $ref: '#/definitions/responses.Season'
        type: array
      status:
        type: string
      streaming:
        items:
          $ref: '#/definitions/responses.Streaming'
        type: array
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
      tmdb_popularity:
        type: number
      tmdb_vote:
        type: number
      tmdb_vote_count:
        type: integer
      total_episodes:
        type: integer
      total_seasons:
        type: integer
      translations:
        items:
          $ref: '#/definitions/responses.Translation'
        type: array
      tv_list:
        $ref: '#/definitions/responses.TVDetailsList'
      videos:
        items:
          $ref: '#/definitions/responses.Trailer'
        type: array
      watch_later:
        $ref: '#/definitions/responses.ConsumeLater'
    type: object
  responses.TVSeriesList:
    properties:
      _id:
        type: string
      content_status:
        type: string
      created_at:
        type: string
      image_url:
        type: string
      score:
        type: number
      status:
        type: string
      status_sort:
        type: integer
      times_finished:
        type: integer
      title_en:
        type: string
      title_original:
        type: string
      tmdb_id:
        type: string
      total_episodes:
        type: integer
      total_seasons:
        type: integer
      tv_id:
        type: string
      watched_episodes:
        type: integer
      watched_seasons:
        type: integer
    type: object
  responses.Trailer:
    properties:
      key:
        type: string
      name:
        type: string
      title_original:
        type: string
    type: object
  responses.Translation:
    properties:
      description:
        type: string
      lan_code:
        type: string
      lan_name:
        type: string
      lan_name_en:
        type: string
      title:
        type: string
    type: object
  responses.User:
    properties:
      _id:
        type: string
      app_notification:
        $ref: '#/definitions/responses.Notification'
      can_change_username:
        type: boolean
      email:
        type: string
      fcm_token:
        type: string
      image:
        type: string
      is_lifetime_premium:
        type: boolean
      is_oauth:
        type: boolean
      is_premium:
        type: boolean
      membership_type:
        description: 0 Basic, 1 Premium 2 Premium Supporter
        type: integer
      oauth_type:
        description: 0 google, 1 apple
        type: integer
      streak:
        type: integer
      username:
        type: string
    type: object
  responses.UserInfo:
    properties:
      _id:
        type: string
      anime_count:
        type: integer
      anime_total_score:
        type: integer
      anime_watched_episodes:
        type: integer
      consume_later:
        items:
          $ref: '#/definitions/responses.ConsumeLater'
        type: array
      custom_lists:
        items:
          $ref: '#/definitions/responses.CustomList'
        type: array
      email:
        type: string
      fcm_token:
        type: string
      friend_request_count:
        type: integer
      game_count:
        type: integer
      game_total_hours_played:
        type: integer
      game_total_score:
        type: integer
      image:
        type: string
      is_friend_request_received:
        type: boolean
      is_friend_request_sent:
        type: boolean
      is_friends_with:
        type: boolean
      is_premium:
        type: boolean
      legend_content:
        items:
          $ref: '#/definitions/responses.UserInfoContent'
        type: array
      level:
        type: integer
      max_streak:
        type: integer
      membership_type:
        type: integer
      movie_count:
        type: integer
      movie_total_score:
        type: integer
      movie_watched_time:
        type: integer
      reviews:
        items:
          $ref: '#/definitions/responses.ReviewWithContent'
        type: array
      streak:
        type: integer
      tv_count:
        type: integer
      tv_total_score:
        type: integer
      tv_watched_episodes:
        type: integer
      username:
        type: string
    type: object
  responses.UserInfoContent:
    properties:
      _id:
        type: string
      content_type:
        type: string
      hours_played:
        type: integer
      image_url:
        type: string
      times_finished:
        type: integer
      title_en:
        type: string
      title_original:
        type: string
    type: object
  responses.UserList:
    properties:
      _id:
        type: string
      anime_list:
        items:
          $ref: '#/definitions/responses.AnimeList'
        type: array
      game_list:
        items:
          $ref: '#/definitions/responses.GameList'
        type: array
      is_public:
        type: boolean
      movie_watch_list:
        items:
          $ref: '#/definitions/responses.MovieList'
        type: array
      slug:
        type: string
      tv_watch_list:
        items:
          $ref: '#/definitions/responses.TVSeriesList'
        type: array
      user_id:
        type: string
    type: object
host: http://localhost:8080
info:
  contact:
    email: mrntlu@gmail.com
    name: Burak Fidan
  description: REST Api of Watchlistfy.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://watchlistfy.com/terms-conditions.html
  title: Watchlistfy API
  version: "1.0"
paths:
  /anime:
    get:
      consumes:
      - application/json
      description: Returns animes by sort and filter
      parameters:
      - description: Sort and Filter Anime
        in: body
        name: sortfilteranime
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterAnime'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Animes by Sort and Filter
      tags:
      - anime
  /anime/details:
    get:
      consumes:
      - application/json
      description: Returns anime details with optional authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.AnimeDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Anime Details
      tags:
      - anime
  /anime/popular:
    get:
      consumes:
      - application/json
      description: Returns Popular Animes
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Animes
      tags:
      - anime
  /anime/popular-streaming-platforms:
    get:
      consumes:
      - application/json
      description: Returns Popular Streaming Platforms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.AnimeNameURL'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Streaming Platforms
      tags:
      - anime
  /anime/popular-studios:
    get:
      consumes:
      - application/json
      description: Returns Popular Studios
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.AnimeNameURL'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Studios
      tags:
      - anime
  /anime/search:
    get:
      consumes:
      - application/json
      description: Search animes
      parameters:
      - description: Search
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/requests.Search'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search Anime
      tags:
      - anime
  /anime/streaming-platforms:
    get:
      consumes:
      - application/json
      description: Returns Animes by Streaming Platform
      parameters:
      - description: Filter By Streaming Platform
        in: body
        name: filterbystreamingplatform
        required: true
        schema:
          $ref: '#/definitions/requests.FilterByStreamingPlatform'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Animes by Streaming Platform
      tags:
      - anime
  /anime/studios:
    get:
      consumes:
      - application/json
      description: Returns Animes by Studios
      parameters:
      - description: Filter By Studio
        in: body
        name: filterbystudio
        required: true
        schema:
          $ref: '#/definitions/requests.FilterByStudio'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Animes by Studios
      tags:
      - anime
  /anime/upcoming:
    get:
      consumes:
      - application/json
      description: Returns upcoming animes by sort with pagination
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Anime'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Upcoming Animes by Sort
      tags:
      - anime
  /assistant/opinion:
    get:
      consumes:
      - application/json
      description: Returns content Public Opinion
      parameters:
      - description: Assistant Request
        in: body
        name: assistantrequest
        required: true
        schema:
          $ref: '#/definitions/requests.AssistantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Content Public Opinion
      tags:
      - openai
  /assistant/summary:
    get:
      consumes:
      - application/json
      description: Returns content summary
      parameters:
      - description: Assistant Request
        in: body
        name: assistantrequest
        required: true
        schema:
          $ref: '#/definitions/requests.AssistantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Content Summary
      tags:
      - openai
  /auth/register:
    post:
      consumes:
      - application/json
      description: Allows users to register
      parameters:
      - description: User registration info
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: User Registration
      tags:
      - auth
  /consume:
    delete:
      consumes:
      - application/json
      description: Deletes Consume Later
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Consume Later
      tags:
      - consume_later
    get:
      consumes:
      - application/json
      description: Returns Consume Later by optional filter
      parameters:
      - description: Sort Filter Consume Later
        in: body
        name: sortfilterconsumelater
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterConsumeLater'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ConsumeLater'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Consume Later
      tags:
      - consume_later
    post:
      consumes:
      - application/json
      description: Creates Consume Later
      parameters:
      - description: Create Consume Later
        in: body
        name: createconsumelater
        required: true
        schema:
          $ref: '#/definitions/requests.CreateConsumeLater'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.ConsumeLaterList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Consume Later
      tags:
      - consume_later
  /consume/all:
    delete:
      consumes:
      - application/json
      description: Deletes All Consume Later
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete All Consume Later
      tags:
      - consume_later
  /consume/move:
    post:
      consumes:
      - application/json
      description: Deletes consume later and creates user list
      parameters:
      - description: Mark Consume Later
        in: body
        name: markconsumelater
        required: true
        schema:
          $ref: '#/definitions/requests.MarkConsumeLater'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Move consume later as user list
      tags:
      - consume_later
  /custom-list:
    delete:
      consumes:
      - application/json
      description: Deletes Custom List
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Custom List
      tags:
      - custom_list
    get:
      consumes:
      - application/json
      description: Get Custom List by User ID with or without authentication
      parameters:
      - description: Sort Custom List UID
        in: body
        name: sortcustomlistuid
        required: true
        schema:
          $ref: '#/definitions/requests.SortCustomListUID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CustomList'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Custom List by User ID
      tags:
      - custom_list
    patch:
      consumes:
      - application/json
      description: Updates Custom List Name, Description, Privacy Status
      parameters:
      - description: Update Custom List
        in: body
        name: updatecustomlist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Custom List Details
      tags:
      - custom_list
    post:
      consumes:
      - application/json
      description: Creates Custom List
      parameters:
      - description: Create Custom List
        in: body
        name: createcustomlist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CustomList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Custom List
      tags:
      - custom_list
  /custom-list/add:
    patch:
      consumes:
      - application/json
      description: Add New Content to Custom List
      parameters:
      - description: Add To Custom List
        in: body
        name: addtocustomlist
        required: true
        schema:
          $ref: '#/definitions/requests.AddToCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Add Content to Custom List
      tags:
      - custom_list
  /custom-list/bookmark:
    patch:
      consumes:
      - application/json
      description: Bookmark Custom List
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CustomList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Bookmark Custom List
      tags:
      - custom_list
  /custom-list/bookmarked:
    get:
      consumes:
      - application/json
      description: Get Bookmarked Custom List
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.SortLikeBookmarkCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CustomList'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Bookmarked Custom List
      tags:
      - custom_list
  /custom-list/content:
    delete:
      consumes:
      - application/json
      description: Deletes Bulk Content from Custom List
      parameters:
      - description: Bulk Delete Custom List
        in: body
        name: bulkdeletecustomlist
        required: true
        schema:
          $ref: '#/definitions/requests.BulkDeleteCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CustomList'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Bulk Content From Custom List
      tags:
      - custom_list
  /custom-list/details:
    get:
      consumes:
      - application/json
      description: Get Custom List Details with or without authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CustomList'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Custom List Details
      tags:
      - custom_list
  /custom-list/like:
    patch:
      consumes:
      - application/json
      description: Like and Dislike Custom List
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.CustomList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Like/Dislike Custom List
      tags:
      - custom_list
  /custom-list/liked:
    get:
      consumes:
      - application/json
      description: Get Liked Custom List
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.SortLikeBookmarkCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CustomList'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Liked Custom List
      tags:
      - custom_list
  /custom-list/social:
    get:
      consumes:
      - application/json
      description: Get Custom List with or without authentication
      parameters:
      - description: Sort Custom List
        in: body
        name: sortcustomlist
        required: true
        schema:
          $ref: '#/definitions/requests.SortCustomList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CustomList'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Custom List
      tags:
      - custom_list
  /game:
    get:
      consumes:
      - application/json
      description: Returns games by sort and filter
      parameters:
      - description: Sort and Filter Game
        in: body
        name: sortfiltergame
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterGame'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Game'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Games by Sort and Filter
      tags:
      - game
  /game/details:
    get:
      consumes:
      - application/json
      description: Returns game details with optional authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.GameDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Game Details
      tags:
      - game
  /game/search:
    get:
      consumes:
      - application/json
      description: Search Game
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Search
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/requests.Search'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Game'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search Game
      tags:
      - game
  /game/upcoming:
    get:
      consumes:
      - application/json
      description: Returns upcoming games by sort with pagination
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Game'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Upcoming Games by Sort
      tags:
      - game
  /list:
    delete:
      consumes:
      - application/json
      description: Deletes list by type and user id
      parameters:
      - description: Delete List
        in: body
        name: deletelist
        required: true
        schema:
          $ref: '#/definitions/requests.DeleteList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete List by Type
      tags:
      - user_list
    get:
      consumes:
      - application/json
      description: Returns user list by user id
      parameters:
      - enum:
        - score
        - timeswatched
        in: query
        name: sort
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.UserList'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get User List by User ID
      tags:
      - user_list
    patch:
      consumes:
      - application/json
      description: Updates user list is_public value
      parameters:
      - description: Update User List
        in: body
        name: updateuserlist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateUserList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update User List Visibility
      tags:
      - user_list
  /list/anime:
    patch:
      consumes:
      - application/json
      description: Updates anime list
      parameters:
      - description: Update Anime List
        in: body
        name: updateanimelist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateAnimeList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnimeList'
        "403":
          description: Unauthorized update
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Anime List
      tags:
      - user_list
    post:
      consumes:
      - application/json
      description: Creates Anime List
      parameters:
      - description: Create Anime List
        in: body
        name: createanimelist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateAnimeList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AnimeList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Anime List
      tags:
      - user_list
  /list/anime/inc:
    patch:
      consumes:
      - application/json
      description: Increment anime list episode
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AnimeList'
        "403":
          description: Unauthorized update
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Increment Anime List
      tags:
      - user_list
  /list/game:
    patch:
      consumes:
      - application/json
      description: Updates game list
      parameters:
      - description: Update Game List
        in: body
        name: updategamelist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateGameList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GameList'
        "403":
          description: Unauthorized update
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Game List
      tags:
      - user_list
    post:
      consumes:
      - application/json
      description: Creates Game List
      parameters:
      - description: Create Game List
        in: body
        name: creategamelist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateGameList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.GameList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Game List
      tags:
      - user_list
  /list/logs:
    get:
      consumes:
      - application/json
      description: Returns logs by user id and date range
      parameters:
      - in: query
        name: from
        required: true
        type: string
      - in: query
        name: to
        required: true
        type: string
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.LogsByRange'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Logs by User ID and date range
      tags:
      - user_list
  /list/manga:
    post:
      consumes:
      - application/json
      description: Creates Manga List
      parameters:
      - description: Create manga List
        in: body
        name: createmangalist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMangaList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.MangaList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Manga List
      tags:
      - user_list
  /list/movie:
    patch:
      consumes:
      - application/json
      description: Updates movie list
      parameters:
      - description: Update Movie List
        in: body
        name: updatemovielist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateMovieList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MovieWatchList'
        "403":
          description: Unauthorized update
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Movie List
      tags:
      - user_list
    post:
      consumes:
      - application/json
      description: Creates Movie Watch List
      parameters:
      - description: Create Movie Watch List
        in: body
        name: createmoviewatchlist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateMovieWatchList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.MovieWatchList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Movie Watch List
      tags:
      - user_list
  /list/tv:
    patch:
      consumes:
      - application/json
      description: Updates tv series list
      parameters:
      - description: Update TV Series List
        in: body
        name: updatetvserieslist
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateTVSeriesList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TVSeriesWatchList'
        "403":
          description: Unauthorized update
          schema:
            type: string
        "404":
          description: Could not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update TV Series List
      tags:
      - user_list
    post:
      consumes:
      - application/json
      description: Creates TVSeries Watch List
      parameters:
      - description: Create TVSeries Watch List
        in: body
        name: createtvserieswatchlist
        required: true
        schema:
          $ref: '#/definitions/requests.CreateTVSeriesWatchList'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TVSeriesWatchList'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create TVSeries Watch List
      tags:
      - user_list
  /manga:
    get:
      consumes:
      - application/json
      description: Returns manga by sort and filter
      parameters:
      - description: Sort and Filter Manga
        in: body
        name: sortfiltermanga
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterManga'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Manga'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Manga by Sort and Filter
      tags:
      - manga
  /manga/details:
    get:
      consumes:
      - application/json
      description: Returns Manga details with optional authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MangaDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Manga Details
      tags:
      - manga
  /movie:
    get:
      consumes:
      - application/json
      description: Returns movies by sort and filter with pagination
      parameters:
      - description: Sort and Filter Movie
        in: body
        name: sortfiltermovie
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterMovie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Movies by Sort and Filter
      tags:
      - movie
  /movie/actor:
    get:
      consumes:
      - application/json
      description: Returns Movies by Actors
      parameters:
      - description: ID Pagination
        in: body
        name: idpagination
        required: true
        schema:
          $ref: '#/definitions/requests.IDPagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Movies by Actors
      tags:
      - movie
  /movie/details:
    get:
      consumes:
      - application/json
      description: Returns movie details with optional authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MovieDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Movie Details
      tags:
      - movie
  /movie/popular-actors:
    get:
      consumes:
      - application/json
      description: Returns Popular Actors
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ActorDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Actors
      tags:
      - movie
  /movie/popular-streaming-platforms:
    get:
      consumes:
      - application/json
      description: Returns Popular Streaming Platforms
      parameters:
      - description: Region Filters
        in: body
        name: regionfilters
        required: true
        schema:
          $ref: '#/definitions/requests.RegionFilters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.StreamingPlatform'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Streaming Platforms
      tags:
      - movie
  /movie/search:
    get:
      consumes:
      - application/json
      description: Search movies
      parameters:
      - description: Search
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/requests.Search'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search Movie
      tags:
      - movie
  /movie/streaming-platforms:
    get:
      consumes:
      - application/json
      description: Returns Movies by Streaming Platform
      parameters:
      - description: Filter By Streaming Platform And Region
        in: body
        name: filterbystreamingplatformandregion
        required: true
        schema:
          $ref: '#/definitions/requests.FilterByStreamingPlatformAndRegion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Movies by Streaming Platform
      tags:
      - movie
  /movie/theaters:
    get:
      consumes:
      - application/json
      description: Returns movies in theaters
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Movies that are in theaters
      tags:
      - movie
  /movie/upcoming:
    get:
      consumes:
      - application/json
      description: Returns upcoming movies by sort with pagination
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Movie'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Upcoming Movies by Sort
      tags:
      - movie
  /oauth/apple:
    post:
      consumes:
      - application/json
      description: Gets user info from apple and creates/finds user and returns token
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: OAuth2 Apple Login
      tags:
      - oauth2
  /oauth/google:
    post:
      consumes:
      - application/json
      description: Gets user info from google and creates/finds user and returns token
      produces:
      - application/json
      responses:
        "200":
          description: Token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: OAuth2 Google Login
      tags:
      - oauth2
  /preview:
    get:
      consumes:
      - application/json
      description: Returns previews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ActorDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Previews
      tags:
      - preview
  /preview/v2:
    get:
      consumes:
      - application/json
      description: Returns previews
      parameters:
      - description: Region Filters
        in: body
        name: regionfilters
        required: true
        schema:
          $ref: '#/definitions/requests.RegionFilters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.AnimeNameURL'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Previews
      tags:
      - preview
  /review:
    delete:
      consumes:
      - application/json
      description: Deletes Review
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Review
      tags:
      - review
    get:
      consumes:
      - application/json
      description: Get Reviews with or without authentication
      parameters:
      - description: Sort Review by Content ID
        in: body
        name: sortreviewbycontentid
        required: true
        schema:
          $ref: '#/definitions/requests.SortReviewByContentID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Review'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Review
      tags:
      - review
    patch:
      consumes:
      - application/json
      description: Update Review
      parameters:
      - description: Create Review
        in: body
        name: createreview
        required: true
        schema:
          $ref: '#/definitions/requests.CreateReview'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Review'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Review
      tags:
      - review
    post:
      consumes:
      - application/json
      description: Creates Review
      parameters:
      - description: Create Review
        in: body
        name: createreview
        required: true
        schema:
          $ref: '#/definitions/requests.CreateReview'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Review'
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Create Review
      tags:
      - review
  /review/details:
    get:
      consumes:
      - application/json
      description: Get Reviews by username with or without authentication
      parameters:
      - description: Sort Review by Username
        in: body
        name: sortreviewbyusername
        required: true
        schema:
          $ref: '#/definitions/requests.SortReviewByUsername'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ReviewWithContent'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Reviews by User
      tags:
      - review
  /review/like:
    patch:
      consumes:
      - application/json
      description: Like Review
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Review'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Like/Dislike Review
      tags:
      - review
  /review/liked:
    get:
      consumes:
      - application/json
      description: Get Liked by User
      parameters:
      - description: Sort Liked Review
        in: body
        name: sortlikedreview
        required: true
        schema:
          $ref: '#/definitions/requests.SortLikedReview'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ReviewWithContent'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Liked by User
      tags:
      - review
  /review/profile:
    get:
      consumes:
      - application/json
      description: Get Review List by UID
      parameters:
      - description: Sort Review
        in: body
        name: sortreview
        required: true
        schema:
          $ref: '#/definitions/requests.SortReview'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ReviewDetails'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Review List by UID
      tags:
      - review
  /review/social:
    get:
      consumes:
      - application/json
      description: Get Review List independent from content or user id
      parameters:
      - description: Sort Review
        in: body
        name: sortreview
        required: true
        schema:
          $ref: '#/definitions/requests.SortReview'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ReviewDetails'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Review List
      tags:
      - review
  /review/user:
    get:
      consumes:
      - application/json
      description: Get Reviews by User
      parameters:
      - description: Sort Review by User ID
        in: body
        name: sortreviewbyuserid
        required: true
        schema:
          $ref: '#/definitions/requests.SortReviewByUserID'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.Review'
            type: array
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Reviews by User
      tags:
      - review
  /social:
    get:
      consumes:
      - application/json
      description: Returns reviews, custom lists and leaderboard for social page.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.SocialPreview'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Socials
      tags:
      - social
  /suggestions:
    get:
      consumes:
      - application/json
      description: Returns ai recommendations from OpenAI
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AISuggestionResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get AI Recommendations from OpenAI
      tags:
      - openai
  /suggestions/generate:
    post:
      consumes:
      - application/json
      description: Generates and returns ai recommendations from OpenAI
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.AISuggestionResponse'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Generate AI Recommendations from OpenAI
      tags:
      - openai
  /tv:
    get:
      consumes:
      - application/json
      description: Returns tv series by sort and filter with pagination
      parameters:
      - description: Sort and Filter TV Series
        in: body
        name: sortfiltertvseries
        required: true
        schema:
          $ref: '#/definitions/requests.SortFilterTVSeries'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeries'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get TV Series by Sort and Filter
      tags:
      - tv
  /tv/actor:
    get:
      consumes:
      - application/json
      description: Returns TV Series by Actors
      parameters:
      - description: ID Pagination
        in: body
        name: idpagination
        required: true
        schema:
          $ref: '#/definitions/requests.IDPagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeries'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get TV Series by Actors
      tags:
      - tv
  /tv/details:
    get:
      consumes:
      - application/json
      description: Returns tv series details with optional authentication
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/requests.ID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeriesDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get TV Series Details
      tags:
      - tv
  /tv/popular-actors:
    get:
      consumes:
      - application/json
      description: Returns Popular Actors
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.ActorDetails'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Actors
      tags:
      - tv
  /tv/popular-streaming-services:
    get:
      consumes:
      - application/json
      description: Returns Popular Streaming Platforms
      parameters:
      - description: Region Filters
        in: body
        name: regionfilters
        required: true
        schema:
          $ref: '#/definitions/requests.RegionFilters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.StreamingPlatform'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Popular Streaming Platforms
      tags:
      - tv
  /tv/search:
    get:
      consumes:
      - application/json
      description: Search tv series
      parameters:
      - description: Search
        in: body
        name: search
        required: true
        schema:
          $ref: '#/definitions/requests.Search'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeries'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search TV Series
      tags:
      - tv
  /tv/streaming-services:
    get:
      consumes:
      - application/json
      description: Returns TV Series by Actors
      parameters:
      - description: Filter By Streaming Platform And Region
        in: body
        name: filterbystreamingplatformandregion
        required: true
        schema:
          $ref: '#/definitions/requests.FilterByStreamingPlatformAndRegion'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeries'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get TV Series by Actors
      tags:
      - tv
  /tv/upcoming:
    get:
      consumes:
      - application/json
      description: Returns upcoming tv series by sort with pagination
      parameters:
      - description: Pagination
        in: body
        name: pagination
        required: true
        schema:
          $ref: '#/definitions/requests.Pagination'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.TVSeries'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get Upcoming TV Series by Sort
      tags:
      - tv
  /user:
    delete:
      consumes:
      - application/json
      description: Deletes everything related to user
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Deletes user information
      tags:
      - user
  /user/basic:
    get:
      consumes:
      - application/json
      description: Returns basic user information
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            $ref: '#/definitions/responses.User'
      security:
      - ApiKeyAuth: []
      summary: User basic info
      tags:
      - user
  /user/forgot-password:
    post:
      consumes:
      - application/json
      description: Users can change their password when they forgot
      parameters:
      - description: User's email
        in: body
        name: ForgotPassword
        required: true
        schema:
          $ref: '#/definitions/requests.ForgotPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Couldn't find any user
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Will be used when user forgot password
      tags:
      - user
  /user/friends:
    get:
      consumes:
      - application/json
      description: Returns friends by user id
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get friends
      tags:
      - user
  /user/image:
    patch:
      consumes:
      - application/json
      description: User can update their image
      parameters:
      - description: Change Image
        in: body
        name: changeimage
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeImage'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Updates user image
      tags:
      - user
  /user/info:
    get:
      consumes:
      - application/json
      description: Returns users membership & stats
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Info
          schema:
            $ref: '#/definitions/responses.UserInfo'
      security:
      - ApiKeyAuth: []
      summary: User membership info
      tags:
      - user
  /user/membership:
    patch:
      consumes:
      - application/json
      description: User membership status will be updated depending on subscription
        status
      parameters:
      - description: Set Membership
        in: body
        name: changemembership
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeMembership'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Membership
      tags:
      - user
  /user/notification:
    patch:
      consumes:
      - application/json
      description: Users can change their notification preference
      parameters:
      - description: Set notification
        in: body
        name: changenotification
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeNotification'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Notification Preference
      tags:
      - user
  /user/password:
    patch:
      consumes:
      - application/json
      description: Users can change their password
      parameters:
      - description: Set new password
        in: body
        name: ChangePassword
        required: true
        schema:
          $ref: '#/definitions/requests.ChangePassword'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change User Password
      tags:
      - user
  /user/profile:
    get:
      consumes:
      - application/json
      description: Returns users stats from username
      parameters:
      - description: Get Profile
        in: body
        name: getprofile
        required: true
        schema:
          $ref: '#/definitions/requests.GetProfile'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User Info
          schema:
            $ref: '#/definitions/responses.UserInfo'
      security:
      - ApiKeyAuth: []
      summary: User info from username
      tags:
      - user
  /user/request:
    post:
      consumes:
      - application/json
      description: Creates user request object and send notification
      parameters:
      - description: Send Friend Request
        in: body
        name: sendfriendrequest
        required: true
        schema:
          $ref: '#/definitions/requests.SendFriendRequest'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Send Friend Request
      tags:
      - user
  /user/request-answer:
    post:
      consumes:
      - application/json
      description: Response friend request object
      parameters:
      - description: Answer Friend Request
        in: body
        name: answerfriendrequest
        required: true
        schema:
          $ref: '#/definitions/requests.AnswerFriendRequest'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Answer Friend Request
      tags:
      - user
  /user/requests:
    get:
      consumes:
      - application/json
      description: Returns friend requests by user id
      parameters:
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Friend Request
          schema:
            items:
              $ref: '#/definitions/responses.FriendRequest'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get friend requests
      tags:
      - user
  /user/stats:
    get:
      consumes:
      - application/json
      description: Returns extra statistics
      parameters:
      - description: Log Stat Interval
        in: body
        name: logstatinterval
        required: true
        schema:
          $ref: '#/definitions/requests.LogStatInterval'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Extra Statistics
          schema:
            $ref: '#/definitions/responses.ExtraStatistics'
      security:
      - ApiKeyAuth: []
      summary: Extra statistics
      tags:
      - user
  /user/token:
    patch:
      consumes:
      - application/json
      description: Depending on logged in device fcm token will be updated
      parameters:
      - description: Set token
        in: body
        name: changefcmtoken
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeFCMToken'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Updates FCM User Token
      tags:
      - user
  /user/username:
    patch:
      consumes:
      - application/json
      description: Users can change their username
      parameters:
      - description: Change Username
        in: body
        name: changeusername
        required: true
        schema:
          $ref: '#/definitions/requests.ChangeUsername'
      - description: Authentication header
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change Username
      tags:
      - user
schemes:
- https
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
